apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "name" . }}
    chart: {{ template "namewithversion" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
data:
  run.sh: |-
    MAX_ATTEMPTS=5

    @test "Test that API is available..." {
      # for some reason, during CI, the first call to the API is returning
      # a 404. So trying a sleep.
      sleep 30

      GOOD=1
      RESP=0
      INVALID=0
      ATTEMPTS=0

      # Get initial health code
      healthCode=${INVALID}

      echo
      while [[ $ATTEMPTS -lt $MAX_ATTEMPTS ]]; do
        until [ "${healthCode}" -gt "${INVALID}" ]; do
          healthCode=$(curl -s --connect-timeout 1 \
            -o /dev/null \
            -w %{http_code} \
            --location \
              http://{{ template "name" . }}.{{ .Release.Namespace }}:2020/api/v1/metrics)

          # sleep for a 3 sec if failed
          if [[ "$healthCode" == 2[02][0-6] ]]; then
            break
            RESP=1
          else
            echo "Will retry, result was ${healthCode}"
            sleep 3;
          fi

          echo "$ATTEMPTS/$MAX_ATTEMPTS: healthCode returned from fb curl check was: $healthCode"

          ATTEMPTS=$((ATTEMPTS + 1))
        done
      done

      [[ $RESP == $GOOD ]]
    }

    @test "Test that API returns that every input plugin has produced at least one record." {
      ATTEMPTS=0

      echo
      while [[ $ATTEMPTS -lt $MAX_ATTEMPTS ]]
      do
        resp="$(curl -s http://{{ template "name" . }}.{{ .Release.Namespace }}:2020/api/v1/metrics)"

        if [[ "$resp" == "" ]]
        then
          echo "$ATTEMPTS/$MAX_ATTEMPTS: curl response was nil."
          continue
        fi

        result="$(echo "$resp" | jq '[(.input[].records | select(. == 0)) ] | length')"

        echo "$ATTEMPTS/$MAX_ATTEMPTS: \$result from jq on curl-check for metrics records was: '$result'"

        ATTEMPTS=$((ATTEMPTS + 1))
      done

      [[ "$result" == 0 ]]
    }
