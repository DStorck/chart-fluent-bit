apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ printf "%s-%s" .Release.Name "fluentbittest" | trunc 63 }}
data:
  run.sh: |-
    MAX_ATTEMPTS=5
    URL="http://{{ .Values.name }}.{{ .Release.Namespace }}:2020/api/v1/metrics"

    @test "Test that API is available..." {
      GOOD=1
      RESP=0
      INVALID=0
      ATTEMPTS=1

      # Get initial health code
      healthCode=${INVALID}

      echo "" >&3
      echo "URL: $URL" >&3
      while [[ $ATTEMPTS -lt $MAX_ATTEMPTS ]]; do
        echo "--------------------------------" >&3
        echo "Trying: $ATTEMPTS/$MAX_ATTEMPTS:" >&3

        run curl -s --connect-timeout 1 \
             -o /dev/null        \
             -w %{http_code}     \
             --location $URL

        echo "CURL OUTPUT: $output" >&3
        # sleep for a 3 secs if failed
        if [[ $output == 200 ]]; then
          RESP=1
          break
        else
          echo "Will retry, result was ${output}" >&3
          sleep 3;
        fi

        echo "healthCode returned from fb curl check was: $output" >&3

        ((ATTEMPTS++))
      done

      [[ $RESP == $GOOD ]]
    }

    @test "Test that API returns that every input plugin has produced at least one record." {
      ATTEMPTS=1

      echo "" >&3
      while [[ $ATTEMPTS -lt $MAX_ATTEMPTS ]]
      do
      echo  "Trying: $ATTEMPTS/$MAX_ATTEMPTS:" >&3
        run curl -s -connect-timeout 1 -H "accept: application/json" $URL > /dev/null

        if [[ "$output" == "" ]]
        then
          echo "curl response was nil." >&3
          ((ATTEMPTS++))
          continue
        fi

        echo "-----------" >&3
        echo "$output" >&3
        echo "-----------" >&3
        echo "$(echo $output | jq '[(.input[].records)]' )" >&3

        resp=$(echo "$output" | jq '[(.input[].records | select(. == 0)) ] | length')

        echo "\$resp from jq on curl-check for metrics records was: '$resp'" >&3

        ((ATTEMPTS++))
      done

      [[ "$resp" == 0 ]]
    }
